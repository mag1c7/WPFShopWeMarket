<Window x:Class="NewWpfShop.Windows.UserWindows.OrderWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NewWpfShop.Windows.UserWindows"
        mc:Ignorable="d"
        Title="Окно заказов" MinHeight="550" Height="550" MinWidth="950" Width="950" WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.10*" MaxHeight="55"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="#2C2C2C" Panel.ZIndex="10" Margin="0,0,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.01*"/>
                <ColumnDefinition Width="0.18*"/>
                <ColumnDefinition Width="0.4*"/>
                <ColumnDefinition Width="0.12*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.35*"/>
                <ColumnDefinition Width="0.35*"/>
                <ColumnDefinition Width="0.35*"/>
                <ColumnDefinition Width="0.18*"/>
                <ColumnDefinition Width="0.01*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.02*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0.02*"/>
            </Grid.RowDefinitions>
            <Button Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1" Click="BackToHome_Click" Background="Transparent" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <!-- Изображение -->
                                <Image Source="/Assets/WeMarket.png"  />
                                <!-- Текст -->
                                <TextBlock Text="WeMarket" Foreground="White" FontStyle="Italic" FontWeight="Bold" FontSize="23" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <ComboBox x:Name="cmbCategory" Grid.Column="3" Grid.Row="1"

Background="White"
BorderBrush="Transparent"
HorizontalContentAlignment="Center"
VerticalContentAlignment="Center"
SelectionChanged="cmbCategory_SelectionChanged"
Padding="0"
FontSize="17">
                <ComboBox.Template>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                    IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                    Focusable="False"
                    ClickMode="Press"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter Content="☰"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                            </ToggleButton>

                            <Popup Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsDropDownOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Slide">
                                <Grid Name="DropDown"
                SnapsToDevicePixels="True"
                MinWidth="{TemplateBinding ActualWidth}"
                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                      Background="White"
                      BorderThickness="1"
                      BorderBrush="Gray"/>
                                    <ScrollViewer Margin="4,6,4,6"
                            SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                              KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ComboBox.Template>

                <ComboBoxItem Content="Удалённые товары"/>
                <ComboBoxItem Content="По умолчанию"/>
            </ComboBox>

            <TextBox Grid.Column="4"
         Grid.Row="1"
         x:Name="TextboxSearch"
         TextWrapping="Wrap"
         FontSize="16"
         TextChanged="TextboxSearch_TextChanged"
         CaretBrush="White"
         Foreground="White">
                <TextBox.Style>
                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                        <Style.Resources>
                            <!-- Placeholder (подсказка) -->
                            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                <VisualBrush.Visual>
                                    <Label Content="Поиск..." Foreground="White" FontSize="16"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Style.Resources>

                        <!-- Основные свойства -->
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0 0 0 1"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Padding" Value="5 0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="CaretBrush" Value="White"/>

                        <!-- Триггеры -->
                        <Style.Triggers>
                            <!-- Показываем placeholder, если текст пустой или null -->
                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                <Setter Property="Background" Value="{StaticResource CueBannerBrush}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource CueBannerBrush}"/>
                            </Trigger>
                            <!-- Убираем placeholder при фокусе -->
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <Button Grid.Column="5" Grid.Row="1" Content="Заказы" Background="#2C2C2C" Foreground="White" FontWeight="Normal" FontSize="18" Click="ButtonOrders">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="Blue" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Grid.Column="6" Grid.Row="1" Content="Избранное" Background="#2C2C2C" Foreground="White" FontWeight="Normal" FontSize="18" Click="ButtonFavorit">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="Blue" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="7" Grid.Row="1" Content="Корзина" Background="#2C2C2C" Foreground="White" FontWeight="Normal" FontSize="18" Click="ButtonCart">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="Blue" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="8" Grid.Row="1" Click="MenuButton_Click" BorderBrush="Transparent" Background="Transparent">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Ellipse>
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="/Assets/UserIcon.png" Stretch="Uniform"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Canvas Panel.ZIndex="10" Grid.Column="9" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <StackPanel x:Name="SlidingMenu" Width="200" Background="#2C2C2C" VerticalAlignment="Stretch"
                    Canvas.Right="-200">
                    <!-- Менюшная разметка -->
                    <Label x:Name="LabelWelcome" Content="Добро пожаловать:"
                   HorizontalAlignment="Center"
                   Margin="1"
                   Foreground="White"
                   FontStyle="Italic"
                   FontWeight="Black"/>

                    <Button x:Name="ButtonAccountUser" Visibility="Visible" Background="Transparent" Foreground="White" BorderThickness="0" Margin="5" Click="ButtonAccountUser_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <!-- Базовые настройки кнопки -->
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="Black" 
                                BorderThickness="1" 
                                CornerRadius="20">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <!-- Триггеры для изменения состояния -->
                                <Style.Triggers>
                                    <!-- При наведении курсора -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFD700"/>
                                        <!-- Цвет фона при наведении -->
                                    </Trigger>
                                    <!-- При нажатии -->
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#FFA500"/>
                                        <!-- Цвет фона при нажатии -->
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Border Background="White" BorderBrush="Black" BorderThickness="1" CornerRadius="20" Opacity="0.9">
                            <Grid>
                                <!-- Столбец для изображения -->
                                <Border BorderBrush="Black" BorderThickness="1" Width="44" Height="44" Margin="10,10,0,10" HorizontalAlignment="Left" CornerRadius="25">
                                    <Image x:Name="image1" Source="/Assets/DefaultImage.png"  Width="44" Height="44">
                                        <Image.Clip>
                                            <EllipseGeometry Center="21,21" RadiusX="21" RadiusY="21" />
                                        </Image.Clip>
                                    </Image>
                                </Border>
                                <!-- Столбец для текста -->
                                <StackPanel Margin="55,0,0,0" VerticalAlignment="Center">
                                    <!-- Имя пользователя -->
                                    <TextBlock x:Name="labelname" Text="Войдите в аккаунт" FontSize="15" FontWeight="SemiBold" Foreground="Black" VerticalAlignment="Center"/>
                                    <!-- Email -->
                                    <TextBlock x:Name="labelemail" Text="" FontSize="12" Foreground="Black"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Button>
                    <Button x:Name="ButtonAuth" Background="#0356FF" Foreground="White" BorderThickness="0" Margin="5" FontSize="16" FontWeight="Bold" Click="ButtonAuth_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
SnapsToDevicePixels="True"
CornerRadius="8">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#0356FF"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        Войти в аккаунт

                    </Button>
                    <Button Background="#0356FF" Foreground="White" BorderThickness="0" Margin="5" FontSize="16" FontWeight="Bold" Click="ButtonInfo_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
SnapsToDevicePixels="True"
CornerRadius="8">
                                                <!-- Добавляем закругленные границы -->
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#0356FF"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        О программе

                    </Button>

                    <Button x:Name="ButtonExit" Visibility="Collapsed" Background="#0356FF" Foreground="White" BorderThickness="0" Margin="5" FontSize="16" FontWeight="Bold" Click="ButtonExit_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
SnapsToDevicePixels="True"
CornerRadius="8">
                                                <!-- Добавляем закругленные границы -->
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#0356FF"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        Выйти из аккаунта

                    </Button>
                    <Button Background="#0356FF" Foreground="White" BorderThickness="0" Margin="5" FontSize="16" FontWeight="Bold" Click="ButtonClose">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
SnapsToDevicePixels="True"
CornerRadius="8">
                                                <!-- Добавляем закругленные границы -->
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#0356FF"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Triggers>
                            <!-- Скрыть меню -->
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SlidingMenu"
                             Storyboard.TargetProperty="(Canvas.Right)"
                             To="-210" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        Закрыть

                    </Button>
                </StackPanel>
            </Canvas>
        </Grid>
        <Grid Grid.Row="1">
            <Grid Background="#ededed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.01*"/>
                    <RowDefinition Height="0.10*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="1" Grid.Column="0" Content="Заказы:" FontSize="25" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <ComboBox x:Name="cmbStatusFilter" Grid.Column="1"  Grid.Row="1"
          materialDesign:HintAssist.Hint="Статус заказа"
          IsEditable="True" IsReadOnly="True"
          Background="Transparent"
          BorderBrush="Transparent"
          HorizontalContentAlignment="Center"
          VerticalContentAlignment="Center"
          Text="Фильтрация по статусу..."
          SelectionChanged="cmbStatusFilter_SelectionChanged">
                    <ComboBox.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </ComboBox.Resources>
                    <ComboBoxItem Content="Все"/>
                    <ComboBoxItem Content="В процессе"/>
                    <ComboBoxItem Content="Выдан"/>
                    <ComboBoxItem Content="Отменён"/>
                </ComboBox>
                <ComboBox x:Name="cmbSortByDate" Grid.Column="3" Grid.Row="1"
          materialDesign:HintAssist.Hint="Сортировка по дате заказа"
          IsEditable="True" IsReadOnly="True"
          Background="Transparent"
          BorderBrush="Transparent"
          HorizontalContentAlignment="Center"
          VerticalContentAlignment="Center"
          Text="Сортировка по дате..."
          SelectionChanged="cmbSortByDate_SelectionChanged">
                    <ComboBox.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </ComboBox.Resources>
                    <ComboBoxItem Content="Сначала новые"/>
                    <ComboBoxItem Content="Сначала старые"/>
                </ComboBox>
                
                
                <Grid Grid.Row="2" Grid.ColumnSpan="5">
                    <ListView x:Name="ListViewProducts" Grid.Column="1" Grid.Row="1" Background="#FFF1F1F1">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
